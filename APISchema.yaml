openapi: 3.0.0
info:
  title: Solex API Documentation
  description: PID Tracking Tool for PV Systems.
    The API can be accessed by a registered user in platform's website.<br/>
    In the page you should navigate to the API Access Registration, and generate an Access Token.
  version: 0.0.1
  contact:
    name: Konstantinos Andreou
    email: kandre11@ucy.ac.cy
    url: http://pid.michalisflorides.com
servers:
  - url: http://pid.michalisflorides.com/SolexAPI/queries
    description: Main server

paths:
  # --------------------------------------------------------------------
  # USERS QUERIES
  /users.php?op=details:
    post:
      summary: Returns all the available details of the requesting account.
      tags:
        - Users
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: First Name
                  surname:
                    type: string
                    description: Surname
                  email:
                    type: string
                    description: Email Address
        "401":
          description: Unauthorized
  /users.php?op=email:
    post:
      summary: Returns the email address of the requesting user.
      tags:
        - Users
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: Email Address
        "401":
          description: Unauthorized

  /users.php?op=name:
    post:
      summary: Returns the first name of the requesting user.
      tags:
        - Users
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Account Name
        "401":
          description: Unauthorized

  /users.php?op=surname:
    post:
      summary: Returns the surname of the requesting user.
      tags:
        - Users
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  surname:
                    type: string
                    description: Account Surname
        "401":
          description: Unauthorized

  /users.php?op=fullname:
    post:
      summary: Returns the full name of the requesting user.
      tags:
        - Users
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  fullname:
                    type: string
                    description: Account Name
        "401":
          description: Unauthorized
  #-----------------------------------------------------------------
  # SENSORS QUERIES
  /sensors.php?op=viewAll:
    post:
      summary: Returns all the sensors that are assigned to the requesting user account.
      tags:
        - Sensors
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sensorID:
                    type: string
                    description: The sensor's id number.
                  sensorName:
                    type: string
                    description: The sensor's name entered by the user.
                  dateAdded:
                    type: string
                    description: The date that the sensor was assigned to the user's account.
                  email:
                    type: string
                    description: Email address of the sensor's user.
                  controllerID:
                    type: string
                    description: The controller's id number that the sensor is assigned to.
                  timezone:
                    type: string
                    description: Timezone of the location that the sensor is assigned to the user's account.
                  onoff:
                    type: boolean
                    description: 1 if the sensor is turned on, 0 if it's off.
        "401":
          description: Unauthorized
  /sensors.php?op=viewSensor:
    post:
      summary: Returns all saved data for a given sensor ID number, that it is assigned to the requesting user.
      tags:
        - Sensors
      parameters:
        - in: query
          name: access_token
          required: true
          schema:
            type: string
            description: Unique access token that can be obtain from the website.
        - in: query
          name: id
          required: true
          schema:
            type: string
            description: Sensor ID to request data.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sensorID:
                    type: string
                    description: The sensor's id number.
                  sensorName:
                    type: string
                    description: The sensor's name entered by the user.
                  dateAdded:
                    type: string
                    description: The date that the sensor was assigned to the user's account.
                  email:
                    type: string
                    description: Email address of the sensor's user.
                  controllerID:
                    type: string
                    description: The controller's id number that the sensor is assigned to.
                  timezone:
                    type: string
                    description: Timezone of the location that the sensor is assigned to the user's account.
                  onoff:
                    type: boolean
                    description: 1 if the sensor is turned on, 0 if it's off.
        "401":
          description: Unauthorized

  /sensors.php?op=search:
    post:
      summary: Returns data for an assigned sensor, searching the name of it using a hint passed as a parameter.
      tags:
        - Sensors
      parameters:
        - in: query
          name: access_token
          description: Unique access token that can be obtain from the website.
          required: true
          schema:
            type: string
        - in: query
          required: true
          name: name
          schema:
            type: string
          description: Search hint to be used.
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sensorID:
                    type: string
                    description: The sensor's ID number.
                  sensorName:
                    type: string
                    description: The sensor's name entered by the user.
                  dateAdded:
                    type: string
                    description: The date that the sensor was assigned to the user's account.
                  email:
                    type: string
                    description: Email address of the sensor's user.
                  controllerID:
                    type: string
                    description: The controller's id number that the sensor is assigned to.
                  timezone:
                    type: string
                    description: Timezone of the location that the sensor is assigned to the user's account.
                  onoff:
                    type: boolean
                    description: 1 if the sensor is turned on, 0 if it's off.
        "401":
          description: Unauthorized
  #----------------------------------------------------------------------------------------------------------
  # CONTROLLERS QUERIES
  /controllers.php?op=viewAll:
    post:
      summary: Returns data for all controllers that are assigned to the requesting user account.
      tags:
        - Controllers
      parameters:
        - in: query
          name: access_token
          description: Unique access token that can be obtain from the website.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  controllerID:
                    type: string
                    description: The controllers's id number.
                  controllerName:
                    type: string
                    description: The controllers's name entered by the user.
                  dateAdded:
                    type: integer
                    description: The date that the controller was assigned to the user's account (Unix Timestamp).
        "401":
          description: Unauthorized

  /controllers.php?op=viewController:
    post:
      summary: Returns data for the controller with the given ID number, that is assigned to the user's account.
      tags:
        - Controllers
      parameters:
        - in: query
          name: id
          description: The controller's ID number to return data.
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          description: Unique access token that can be obtain from the website.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  controllerID:
                    type: string
                    description: The controllers's id number.
                  controllerName:
                    type: string
                    description: The controllers's name entered by the user.
                  dateAdded:
                    type: integer
                    description: The date that the controller was assigned to the user's account (Unix Timestamp).
        "401":
          description: Unauthorized
  #-----------------------------------------------------------------
  # DATA REQUEST QUERIES

  /data.php?op=viewAll:
    post:
      summary: Returns all the data that are available for the sensors that are assigned to the requesting account.
      tags:
        - Data
      parameters:
        - in: query
          name: access_token
          description: Unique access token that can be obtain from the website.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: integer
                    description: The date and time of measurement as a unix timestamp.
                  sensorID:
                    type: string
                    description: The sensor's ID number.
                  meas:
                    type: number
                    description: The value of the measurement.
        "401":
          description: Unauthorized

  /data.php?op=viewRange:
    post:
      summary: Returns all the data that are between a given datetime range as request parameters.
      tags:
        - Data
      parameters:
        - in: query
          name: access_token
          description: Unique access token that can be obtain from the website.
          required: true
          schema:
            type: string
        - in: query
          name: from
          description: Start unix timestamp of the desired range.
          required: true
          schema:
            type: integer
        - in: query
          name: to
          description: End unix timestamp of the desired range.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Operation Executed Successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: integer
                    description: The date and time of measurement as a unix timestamp.
                  sensorID:
                    type: string
                    description: The sensor's ID number.
                  meas:
                    type: number
                    description: The value of the measurement.
        "401":
          description: Unauthorized
